1）Joinpoint(连接点):所谓连接点是指那些被拦截到的点。在spring中,这些点指的是方法,因为spring只支持方法类型的连接点.
    如果非要针对于字段的拦截, 那么可以通过setter getter方法来实现.

2）Pointcut(切入点):所谓切入点是指我们要对哪些Joinpoint进行拦截的定义

3）Advice(通知/增强):所谓通知是指拦截到Joinpoint之后所要做的事情就是通知.
通知分为前置通知,后置通知,异常通知,最终通知,环绕通知(切面要完成的功能)

4）Target(目标对象):代理的目标对象

5）Weaving(织入):是指把增强应用到目标对象来创建新的代理对象的过程.
spring采用动态代理织入，而AspectJ采用编译期织入和类装在期织入

6）Proxy（代理）:一个类被AOP织入增强后，就产生一个结果代理类

7）Aspect(切面): 是切入点和通知的结合

案例:
    有一个接口可通过用户名及密码获取user的信息, 我们希望做这些事情:
    1, 在客户端获取用户信息之前打印一下服务器时间
    2, 处理获取的用户信息(处理逻辑自定义), 并打印
    3, 当用户为admin 的时候我们抛出异常, 提示不可访问admin用户信息.