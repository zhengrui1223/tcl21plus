<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.movit.dao.PersonMapper" >

    <resultMap id="BaseResultMap" type="com.movit.model.Person" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="Base_Column_List" >
        id, name, password
    </sql>

    <select id="findAll" resultMap="BaseResultMap" >
        select
        <include refid="Base_Column_List" />
        from person
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select
        <include refid="Base_Column_List" />
        from person
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from person
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <insert id="insert" parameterType="com.movit.model.Person" useGeneratedKeys="true" keyProperty="id">
        insert into person (id, name, password)
        values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR})
    </insert>

    <update id="updateByPrimaryKey" parameterType="com.movit.model.Person">
        update person
        set name = #{name,jdbcType=VARCHAR},
          password = #{password,jdbcType=VARCHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>

</mapper>